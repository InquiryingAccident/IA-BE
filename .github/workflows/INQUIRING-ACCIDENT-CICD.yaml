name: INQUIRING-ACCIDENT-CICD

on:
  push:
    branches:
      - main
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create application.yml from secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml

      - name: Create application-prod.yml from secret
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROD_YML }}" > src/main/resources/application-prod.yml

      - name: Build with Gradle
        run: ./gradlew clean build -x test -Dspring.profiles.active=prod

      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/plane-accident-finder-back:main
            ${{ secrets.DOCKERHUB_USERNAME }}/plane-accident-finder-back:test
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/plane-accident-finder-back:cache
          cache-to: type=inline

  deploy-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy Main via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2022
          script: |
            set -e
            export PW=${{ secrets.SERVER_PASSWORD }}

            echo "배포: main 브랜치"
            IMAGE_FULL="${{ secrets.DOCKERHUB_USERNAME }}/plane-accident-finder-back:main"
            echo "도커 이미지 풀: $IMAGE_FULL"
            echo $PW | sudo -S docker pull $IMAGE_FULL

            echo "컨테이너 plane-accident-finder-back 존재 여부 확인 중..."
            if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^plane-accident-finder-back$"; then
              echo "기존 컨테이너 plane-accident-finder-back 삭제 중..."
              echo $PW | sudo -S docker rm -f plane-accident-finder-back
            fi

            echo "새 컨테이너 plane-accident-finder-back 실행 중..."
            echo $PW | sudo -S docker run -d -p 8085:8080 --name plane-accident-finder-back \
              -e TZ=Asia/Seoul \
              -e SPRING_PROFILES_ACTIVE=prod \
              -v /etc/localtime:/etc/localtime:ro \
              -v /volume1/projects/plane-accident-finder:/mnt/plane-accident-finder \
              $IMAGE_FULL

            echo "main 브랜치 배포 완료."

  deploy-test:
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy Test via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2022
          script: |
            set -e
            export PW=${{ secrets.SERVER_PASSWORD }}

            echo "배포: test 브랜치"
            IMAGE_FULL="${{ secrets.DOCKERHUB_USERNAME }}/plane-accident-finder-back:test"
            echo "도커 이미지 풀: $IMAGE_FULL"
            echo $PW | sudo -S docker pull $IMAGE_FULL

            echo "컨테이너 plane-accident-finder-back-test 존재 여부 확인 중..."
            if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^plane-accident-finder-back-test$"; then
              echo "기존 컨테이너 plane-accident-finder-back-test 삭제 중..."
              echo $PW | sudo -S docker rm -f plane-accident-finder-back-test
            fi

            echo "새 컨테이너 plane-accident-finder-back-test 실행 중..."
            echo $PW | sudo -S docker run -d -p 8086:8080 --name plane-accident-finder-back-test \
              -e TZ=Asia/Seoul \
              -e SPRING_PROFILES_ACTIVE=prod \
              -v /etc/localtime:/etc/localtime:ro \
              -v /volume1/projects/plane-accident-finder:/mnt/plane-accident-finder \
              $IMAGE_FULL

            echo "test 브랜치 배포 완료."
